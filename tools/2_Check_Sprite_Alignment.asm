.pc = $0801 "SYS 2064"
:BasicUpstart($0810) 
.pc = $0810 "Main Code"

// Display Sprites that contain text
displaySprites:
    ldx #$00                        // Set the sprite data pointers for $2000-$33ff
    ldy #$0b                        // Choose which set of character sprites to display (0-9)
    lda spriteCharDefs,y
    tay
spritePointerLoop:
    tya
    sta $07f8,x
    iny
    inx
    cpx #$08
    bne spritePointerLoop
    
    ldx #$00
    ldy #$00
SetSpritePos:
    lda SPRITE_POS_X, x
    sta $d000,y
    lda SPRITE_POS_Y, x
    sta $d001,y
    lda #$01
    sta $d027,x
    iny
    iny
    inx
    cpx #$08
    bne SetSpritePos

    lda #$ff
    sta $d015 // Enable sprites 0-6
    rts


// Sprite positions
SPRITE_POS_X:
.byte 24, 48, 72, 96, 120, 144, 168, 192

SPRITE_POS_X_OFFSET:
.byte 0, 0, 0, 0, 0, 0, 0, 0

SPRITE_POS_Y:
.byte 240, 240, 240, 240, 240, 240, 240, 240

spriteCharDefs:
.byte $80, $88, $90, $98, $a0, $a8, $b0, $b7, $be, $c5, $cb, $d2, $db, $e2, $e9, $f0, $f7, $fe


// ----------------------------------------------
// Sprite data for text status 
// ----------------------------------------------
// 400 - FE0
// ----------------------------------------------
.pc = $2000 + 64*0 // 400
SIDADDR:
.byte    6, 60, 60, 14, 102, 102, 30, 110, 110, 102, 118, 118, 127, 102, 102, 6, 102, 102, 6, 60, 60

.pc = $2000 + 64*1 // 420
.byte    6, 60, 60, 14, 102, 102, 30, 6, 110, 102, 12, 118, 127, 48, 102, 6, 96, 102, 6, 126, 60

.pc = $2000 + 64*2 // 440
.byte    6, 6, 60, 14, 14, 102, 30, 30, 110, 102, 102, 118, 127, 127, 102, 6, 6, 102, 6, 6, 60

.pc = $2000 + 64*3 // 460
.byte    6, 60, 60, 14, 102, 102, 30, 96, 110, 102, 124, 118, 127, 102, 102, 6, 102, 102, 6, 60, 60

.pc = $2000 + 64*4 // 480
.byte    6, 60, 60, 14, 102, 102, 30, 102, 110, 102, 60, 118, 127, 102, 102, 6, 102, 102, 6, 60, 60

.pc = $2000 + 64*5 // 4A0
.byte    6, 24, 60, 14, 60, 102, 30, 102, 110, 102, 126, 118, 127, 102, 102, 6, 102, 102, 6, 102, 60

.pc = $2000 + 64*6 // 4C0
.byte    6, 60, 60, 14, 102, 102, 30, 96, 110, 102, 96, 118, 127, 96, 102, 6, 102, 102, 6, 60, 60

.pc = $2000 + 64*7 // 4E0
.byte    6, 126, 60, 14, 96, 102, 30, 96, 110, 102, 120, 118, 127, 96, 102, 6, 96, 102, 6, 126, 60

.pc = $2000 + 64*8 // 500
.byte  126, 60, 60, 96, 102, 102, 124, 110, 110, 6, 118, 118, 6, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*9 // 520
.byte  126, 60, 60, 96, 102, 102, 124, 6, 110, 6, 12, 118, 6, 48, 102, 102, 96, 102, 60, 126, 60

.pc = $2000 + 64*10 // 540
.byte  126, 6, 60, 96, 14, 102, 124, 30, 110, 6, 102, 118, 6, 127, 102, 102, 6, 102, 60, 6, 60

.pc = $2000 + 64*11 // 560
.byte  126, 60, 60, 96, 102, 102, 124, 96, 110, 6, 124, 118, 6, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*12 // 580
.byte  126, 60, 60, 96, 102, 102, 124, 102, 110, 6, 60, 118, 6, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*13 // 5A0
.byte  126, 24, 60, 96, 60, 102, 124, 102, 110, 6, 126, 118, 6, 102, 102, 102, 102, 102, 60, 102, 60

.pc = $2000 + 64*14 // 5C0
.byte  126, 60, 60, 96, 102, 102, 124, 96, 110, 6, 96, 118, 6, 96, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*15 // 5E0
.byte  126, 126, 60, 96, 96, 102, 124, 96, 110, 6, 120, 118, 6, 96, 102, 102, 96, 102, 60, 126, 60

.pc = $2000 + 64*16 // 600
.byte   60, 60, 60, 102, 102, 102, 96, 110, 110, 124, 118, 118, 102, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*17 // 620
.byte   60, 60, 60, 102, 102, 102, 96, 6, 110, 124, 12, 118, 102, 48, 102, 102, 96, 102, 60, 126, 60

.pc = $2000 + 64*18 // 640
.byte   60, 6, 60, 102, 14, 102, 96, 30, 110, 124, 102, 118, 102, 127, 102, 102, 6, 102, 60, 6, 60

.pc = $2000 + 64*19 // 660
.byte   60, 60, 60, 102, 102, 102, 96, 96, 110, 124, 124, 118, 102, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*20 // 680
.byte   60, 60, 60, 102, 102, 102, 96, 102, 110, 124, 60, 118, 102, 102, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*21 // 6A0
.byte   60, 24, 60, 102, 60, 102, 96, 102, 110, 124, 126, 118, 102, 102, 102, 102, 102, 102, 60, 102, 60

.pc = $2000 + 64*22 // 6C0
.byte   60, 60, 60, 102, 102, 102, 96, 96, 110, 124, 96, 118, 102, 96, 102, 102, 102, 102, 60, 60, 60

.pc = $2000 + 64*23 // 6E0
.byte   60, 126, 60, 102, 96, 102, 96, 96, 110, 124, 120, 118, 102, 96, 102, 102, 96, 102, 60, 126, 60

.pc = $2000 + 64*24 // 700
.byte  126, 60, 60, 102, 102, 102, 12, 110, 110, 24, 118, 118, 24, 102, 102, 24, 102, 102, 24, 60, 60

.pc = $2000 + 64*25 // 720
.byte  126, 60, 60, 102, 102, 102, 12, 6, 110, 24, 12, 118, 24, 48, 102, 24, 96, 102, 24, 126, 60

.pc = $2000 + 64*26 // 740
.byte  126, 6, 60, 102, 14, 102, 12, 30, 110, 24, 102, 118, 24, 127, 102, 24, 6, 102, 24, 6, 60

.pc = $2000 + 64*27 // 760
.byte  126, 60, 60, 102, 102, 102, 12, 96, 110, 24, 124, 118, 24, 102, 102, 24, 102, 102, 24, 60, 60

.pc = $2000 + 64*28 // 780
.byte  126, 60, 60, 102, 102, 102, 12, 102, 110, 24, 60, 118, 24, 102, 102, 24, 102, 102, 24, 60, 60

.pc = $2000 + 64*29 // 7A0
.byte  126, 24, 60, 102, 60, 102, 12, 102, 110, 24, 126, 118, 24, 102, 102, 24, 102, 102, 24, 102, 60

.pc = $2000 + 64*30 // 7C0
.byte  126, 60, 60, 102, 102, 102, 12, 96, 110, 24, 96, 118, 24, 96, 102, 24, 102, 102, 24, 60, 60

.pc = $2000 + 64*31 // 7E0
.byte  126, 126, 60, 102, 96, 102, 12, 96, 110, 24, 120, 118, 24, 96, 102, 24, 96, 102, 24, 126, 60

.pc = $2000 + 64*32 // E00
.byte  126, 60, 60, 96, 102, 102, 96, 110, 110, 120, 118, 118, 96, 102, 102, 96, 102, 102, 126, 60, 60

.pc = $2000 + 64*33 // E20
.byte  126, 60, 60, 96, 102, 102, 96, 6, 110, 120, 12, 118, 96, 48, 102, 96, 96, 102, 126, 126, 60

.pc = $2000 + 64*34 // E40
.byte  126, 6, 60, 96, 14, 102, 96, 30, 110, 120, 102, 118, 96, 127, 102, 96, 6, 102, 126, 6, 60

.pc = $2000 + 64*35 // E60
.byte  126, 60, 60, 96, 102, 102, 96, 96, 110, 120, 124, 118, 96, 102, 102, 96, 102, 102, 126, 60, 60

.pc = $2000 + 64*36 // E80
.byte  126, 60, 60, 96, 102, 102, 96, 102, 110, 120, 60, 118, 96, 102, 102, 96, 102, 102, 126, 60, 60

.pc = $2000 + 64*37 // EA0
.byte  126, 24, 60, 96, 60, 102, 96, 102, 110, 120, 126, 118, 96, 102, 102, 96, 102, 102, 126, 102, 60

.pc = $2000 + 64*38 // EC0
.byte  126, 60, 60, 96, 102, 102, 96, 96, 110, 120, 96, 118, 96, 96, 102, 96, 102, 102, 126, 60, 60

.pc = $2000 + 64*39 // EE0
.byte  126, 126, 60, 96, 96, 102, 96, 96, 110, 120, 120, 118, 96, 96, 102, 96, 96, 102, 126, 126, 60

.pc = $2000 + 64*40 // F00
.byte  126, 60, 60, 96, 102, 102, 96, 110, 110, 120, 118, 118, 96, 102, 102, 96, 102, 102, 96, 60, 60

.pc = $2000 + 64*41 // F20
.byte  126, 60, 60, 96, 102, 102, 96, 6, 110, 120, 12, 118, 96, 48, 102, 96, 96, 102, 96, 126, 60

.pc = $2000 + 64*42 // F40
.byte  126, 6, 60, 96, 14, 102, 96, 30, 110, 120, 102, 118, 96, 127, 102, 96, 6, 102, 96, 6, 60

.pc = $2000 + 64*43 // F60
.byte  126, 60, 60, 96, 102, 102, 96, 96, 110, 120, 124, 118, 96, 102, 102, 96, 102, 102, 96, 60, 60

.pc = $2000 + 64*44 // F80
.byte  126, 60, 60, 96, 102, 102, 96, 102, 110, 120, 60, 118, 96, 102, 102, 96, 102, 102, 96, 60, 60

.pc = $2000 + 64*45 // FA0
.byte  126, 24, 60, 96, 60, 102, 96, 102, 110, 120, 126, 118, 96, 102, 102, 96, 102, 102, 96, 102, 60

.pc = $2000 + 64*46 // FC0
.byte  126, 60, 60, 96, 102, 102, 96, 96, 110, 120, 96, 118, 96, 96, 102, 96, 102, 102, 96, 60, 60

.pc = $2000 + 64*47 // FE0
.byte  126, 126, 60, 96, 96, 102, 96, 96, 110, 120, 120, 118, 96, 96, 102, 96, 96, 102, 96, 126, 60

// ----------------------------------------------
// [F3] TOGGLES MUSIC
// ----------------------------------------------
.pc = $2000 + 64*48  // __[
STATUS1:
.byte   0,   0,  60,   0,   0,  48,   0,   0,  48,   0,   0,  48,   0,   0,  48,   0,   0,  48,   0,   0,  60

.pc = $2000 + 64*49  // 03]
.byte 126,  60,  60,  96, 102,  12,  96,   6,  12, 120,  28,  12,  96,   6,  12,  96, 102,  12,  96,  60,  60

.pc = $2000 + 64*50  // _TO
.byte 0, 126,  60,   0,  24, 102,   0,  24, 102,   0,  24, 102,   0,  24, 102,   0,  24, 102,   0,  24,  60

.pc = $2000 + 64*51  // GGL
.byte  60,  60,  96, 102, 102,  96,  96,  96,  96, 110, 110,  96, 102, 102,  96, 102, 102,  96,  60,  60, 126

.pc = $2000 + 64*52  // ES_
.byte 126,  60,   0,  96, 102,   0,  96,  96,   0, 120,  60,   0,  96,   6,   0,  96, 102,   0, 126,  60

.pc = $2000 + 64*53  // MUS
.byte  99, 102,  60, 119, 102, 102, 127, 102,  96, 107, 102,  60,  99, 102,   6,  99, 102, 102,  99,  60,  60

.pc = $2000 + 64*54  // IC_
.byte  60,  60,   0,  24, 102,   0,  24,  96,   0,  24,  96,   0,  24,  96,   0,  24, 102,   0,  60,  60

// ----------------------------------------------
// [F5/F6] TO SWITCH SID
// ----------------------------------------------
STATUS2:
.pc = $2000 + 64*55  // [F5
.byte  60, 126, 126,  48,  96,  96,  48,  96, 124,  48, 120,   6,  48,  96,   6,  48,  96, 102,  60,  96,  60

.pc = $2000 + 64*56  // /F6
.byte   0, 126,  60,   6,  96, 102,  12,  96,  96,  24, 120, 124,  48,  96, 102,  96,  96, 102,  192,  96,  60

.pc = $2000 + 64*57  // ]_T
.byte  60,   0, 126,  12,   0,  24,  12,   0,  24,  12,   0,  24,  12,   0,  24,  12,   0,  24,  60,   0,  24

.pc = $2000 + 64*58 // O_S
.byte  60,   0,  60, 102,   0, 102, 102,   0,  96, 102,   0,  60, 102,   0,   6, 102,   0, 102,  60,   0,  60

.pc = $2000 + 64*59 // WIT
.byte  99,  60, 126,  99,  24,  24,  99,  24,  24, 107,  24,  24, 127,  24,  24, 119,  24,  24,  99,  60,  24

.pc = $2000 + 64*60 // CH_
.byte  60, 102,   0, 102, 102,   0,  96, 102,   0,  96, 126,   0,  96, 102,   0, 102, 102,   0,  60, 102

.pc = $2000 + 64*61 // SID
.byte  60,  60, 120, 102,  24, 108,  96,  24, 102,  60,  24, 102,   6,  24, 102, 102,  24, 108,  60,  60, 120

// ----------------------------------------------
// [F7] CLEARS THE GRID
// ----------------------------------------------
STATUS3:
.pc = $2000 + 64*62 // [F7
.byte  60, 126, 126,  48,  96, 102,  48,  96,  12,  48, 120,  24,  48,  96,  24,  48,  96,  24,  60,  96,  24

.pc = $2000 + 64*63 // ]_C
.byte  60,   0,  60,  12,   0, 102,  12,   0,  96,  12,   0,  96,  12,   0,  96,  12,   0, 102,  60,   0,  60

.pc = $2000 + 64*64 // LEA
.byte  96, 126,  24,  96,  96,  60,  96,  96, 102,  96, 120, 126,  96,  96, 102,  96,  96, 102, 126, 126, 102

.pc = $2000 + 64*65 // RS_
.byte 124,  60,   0, 102, 102,   0, 102,  96,   0, 124,  60,   0, 120,   6,   0, 108, 102,   0, 102,  60

.pc = $2000 + 64*66 // THE
.byte 126, 102, 126,  24, 102,  96,  24, 102,  96,  24, 126, 120,  24, 102,  96,  24, 102,  96,  24, 102, 126

.pc = $2000 + 64*67 // _GR
.byte  0, 60, 124,   0, 102, 102,   0,  96, 102,   0, 110, 124,   0, 102, 120,   0, 102, 108,   0,  60, 102

.pc = $2000 + 64*68 // ID_
.byte  60, 120,   0,  24, 108,   0,  24, 102,   0,  24, 102,   0,  24, 102,   0,  24, 108,   0,  60, 120

// ----------------------------------------------
// ACTIVATES SID ON  $D___
// ----------------------------------------------
.pc = $2000 + 64*69 // ACT
STATUS4:
.byte  24,  60, 126,  60, 102,  24, 102,  96,  24, 126,  96,  24, 102,  96,  24, 102, 102,  24, 102,  60,  24

.pc = $2000 + 64*70 // IVE
.byte  60, 102, 126,  24, 102,  96,  24, 102,  96,  24, 102, 120,  24, 102,  96,  24,  60,  96,  60,  24, 126

.pc = $2000 + 64*71 // _SI
.byte  0, 60,  60,   0, 102,  24,   0,  96,  24,   0,  60,  24,   0,   6,  24,   0, 102,  24,   0,  60,  60

.pc = $2000 + 64*72 // D_O
.byte  120,   0,  60, 108,   0, 102, 102,   0, 102, 102,   0, 102, 102,   0, 102, 108,   0, 102, 120,   0,  60

.pc = $2000 + 64*73 // N:_
.byte  102,   0,   0, 118,   0,   0, 126,  24,   0, 126,   0,   0, 110,   0,   0, 102,  24,   0, 102

.pc = $2000 + 64*74 // _$D
.byte    0,  24, 120,   0,  62, 108,   0,  96, 102,   0,  60, 102,   0,   6, 102,   0, 124, 108,   0,  24, 120


// ----------------------------------------------
// MOVE - CURSORS / JOY2
// ----------------------------------------------
.pc = $2000 + 64*75 // MOV
STATUS5:
.byte 99, 60, 102, 119, 102, 102, 127, 102, 102, 107, 102, 102, 99, 102, 102, 99, 102, 60, 99, 60, 24

.pc = $2000 + 64*76 // E_-
.byte 126, 0, 0, 96, 0, 0, 96, 0, 0, 120, 0, 126, 96, 0, 0, 96, 0, 0, 126

.pc = $2000 + 64*77 // _CU
.byte 0, 60, 102, 0, 102, 102, 0, 96, 102, 0, 96, 102, 0, 96, 102, 0, 102, 102, 0, 60, 60

.pc = $2000 + 64*78 // RSO
.byte 124, 60, 60, 102, 102, 102, 102, 96, 102, 124, 60, 102, 120, 6, 102, 108, 102, 102, 102, 60, 60

.pc = $2000 + 64*79 // ORS
.byte 124, 60, 0, 102, 102, 0, 102, 96, 0, 124, 60, 0, 120, 6, 0, 108, 102, 0, 102, 60

.pc = $2000 + 64*80 // /_J
.byte 0, 0, 30, 3, 0, 12, 6, 0, 12, 12, 0, 12, 24, 0, 12, 48, 0, 108, 96, 0, 56

.pc = $2000 + 64*81 // OY2
.byte 60, 102, 60, 102, 102, 102, 102, 102, 6, 102, 60, 12, 102, 24, 48, 102, 24, 96, 60, 24, 126


// ----------------------------------------------
// SELECT - SPACE / FIRE
// ----------------------------------------------
.pc = $2000 + 64*82 // SEL
STATUS6:
.byte 60, 126, 96, 102, 96, 96, 96, 96, 96, 60, 120, 96, 6, 96, 96, 102, 96, 96, 60, 126, 126

.pc = $2000 + 64*83 // ECT
.byte 126, 60, 126, 96, 102, 24, 96, 96, 24, 120, 96, 24, 96, 96, 24, 96, 102, 24, 126, 60, 24

.pc = $2000 + 64*84 // _/_
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0

.pc = $2000 + 64*85 // SPA
.byte 60, 124, 24, 102, 102, 60, 96, 102, 102, 60, 124, 126, 6, 96, 102, 102, 96, 102, 60, 96, 102

.pc = $2000 + 64*86 // CE_
.byte 60, 126, 0, 102, 96, 0, 96, 96, 0, 96, 120, 0, 96, 96, 0, 102, 96, 0, 60, 126

.pc = $2000 + 64*87 // /_F
.byte 3, 0, 126, 6, 0, 96, 12, 0, 96, 24, 0, 120, 48, 0, 96, 96, 0, 96, 0, 0, 96

.pc = $2000 + 64*88 // IRE
.byte 60, 124, 126, 24, 102, 96, 24, 102, 96, 24, 124, 120, 24, 120, 96, 24, 108, 96, 60, 102, 126

.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
